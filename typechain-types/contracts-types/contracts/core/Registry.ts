/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace Config {
  export type GameResourceStruct = {
    tokenName: string;
    tokenSymbol: string;
    resourceTypeId: BytesLike;
  };

  export type GameResourceStructOutput = [
    tokenName: string,
    tokenSymbol: string,
    resourceTypeId: string
  ] & { tokenName: string; tokenSymbol: string; resourceTypeId: string };

  export type GameUnitStruct = {
    tokenName: string;
    tokenSymbol: string;
    unitTypeId: BytesLike;
  };

  export type GameUnitStructOutput = [
    tokenName: string,
    tokenSymbol: string,
    unitTypeId: string
  ] & { tokenName: string; tokenSymbol: string; unitTypeId: string };

  export type UnitStatsStruct = {
    offenseStage1: BigNumberish;
    defenceStage1: BigNumberish;
    offenseStage2: BigNumberish;
    defenceStage2: BigNumberish;
    siegePower: BigNumberish;
    siegeSupport: BigNumberish;
  };

  export type UnitStatsStructOutput = [
    offenseStage1: bigint,
    defenceStage1: bigint,
    offenseStage2: bigint,
    defenceStage2: bigint,
    siegePower: bigint,
    siegeSupport: bigint
  ] & {
    offenseStage1: bigint;
    defenceStage1: bigint;
    offenseStage2: bigint;
    defenceStage2: bigint;
    siegePower: bigint;
    siegeSupport: bigint;
  };
}

export interface RegistryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "getAdvancedProductionTileBonusByVariation"
      | "getArmyStunDurationByJoiningBattleAtAttackingSide"
      | "getArmyStunDurationPerRobberyMultiplier"
      | "getBaseBattleDuration"
      | "getBasicProductionBuildingCoefficient"
      | "getBattleDurationLosingArmyStunMultiplier"
      | "getBattleDurationWinningArmyStunMultiplier"
      | "getBuildingActivationPrice"
      | "getBuildingCooldownDurationAfterActivation"
      | "getBuildingTokenTransferThresholdPercent"
      | "getBuildingTypeIds"
      | "getBuildingUpgradeCostMultiplier"
      | "getCaptureTileDurationPerTile"
      | "getCaptureTileInitialDuration"
      | "getChanceForTileWithBonusByRegionTier"
      | "getCorruptionIndexByResource"
      | "getCultistUnitTypeId"
      | "getCultistsNoDestructionDelay"
      | "getCultistsPerRegionMultiplier"
      | "getCultistsSummonDelay"
      | "getDemilitarizationCooldown"
      | "getGameResources"
      | "getGameUnits"
      | "getGlobalMultiplier"
      | "getInitialCaptureProsperityBasicValue"
      | "getInitialCaptureProsperityPerTileValue"
      | "getInitialCorruptionIndexPerCultistMultiplier"
      | "getInitialCultistsAmountByRegionTier"
      | "getManeuverStunDuration"
      | "getMaxAdvancedProductionTileBuff"
      | "getMaxAllowedRobberyMultiplierIncreaseValue"
      | "getMaxAllowedUnitsToBuyPerTransaction"
      | "getMaxAllowedWorkersToBuyPerTransaction"
      | "getMaxCapturedTilesForSettlement"
      | "getMaxCultistsPerRegion"
      | "getMaxRegionTier"
      | "getMaxSettlementsPerRegion"
      | "getMinimumBattleDuration"
      | "getMinimumUserSettlementsCountInNeighboringRegionRequiredToIncludeRegion"
      | "getNecessaryProsperityPercentForClaimingTileCapture"
      | "getNewSettlementPriceIncreaseMultiplier"
      | "getNewSettlementStartingPrice"
      | "getNextCaptureProsperityBasicThreshold"
      | "getNextCaptureProsperityPerTileThreshold"
      | "getProductionTicksInSecond"
      | "getProsperityForUnitLiquidation"
      | "getRegionInclusionPrice"
      | "getRegionOwnerSettlementPurchasePercent"
      | "getResourceWeight"
      | "getRobberyPointsPerDamageMultiplier"
      | "getRobberyPointsToResourceMultiplier"
      | "getSettlementPayToDecreaseCorruptionIndexPenaltyMultiplier"
      | "getSettlementPriceMultiplierPerIncreasedRegionTier"
      | "getStunDurationOfCancelledSecretManeuver"
      | "getTileCaptureCancellationFee"
      | "getToTreasuryPercent"
      | "getUnitBattleMultiplierTileBonusByVariation"
      | "getUnitHiringFortHpMultiplier"
      | "getUnitPoolType"
      | "getUnitPriceDropByUnitTypeId"
      | "getUnitPriceIncreaseByUnitTypeId"
      | "getUnitResourceUsagePer1SecondOfDecreasedManeuverDuration"
      | "getUnitStats"
      | "getUnitTypeIds"
      | "getWorkerCapacityCoefficient"
      | "getWorkerPriceDrop"
      | "getWorkerPriceIncreaseForEachWorker"
      | "getWorkersAmountForBuildingActivation"
      | "getWorkersForUnitLiquidation"
      | "init"
      | "mightyCreator"
      | "setMightyCreator"
      | "setWorldAssetFactory"
      | "worldAssetFactory"
  ): FunctionFragment;

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;

  encodeFunctionData(
    functionFragment: "getAdvancedProductionTileBonusByVariation",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArmyStunDurationByJoiningBattleAtAttackingSide",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getArmyStunDurationPerRobberyMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBaseBattleDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBasicProductionBuildingCoefficient",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBattleDurationLosingArmyStunMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBattleDurationWinningArmyStunMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuildingActivationPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuildingCooldownDurationAfterActivation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuildingTokenTransferThresholdPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuildingTypeIds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBuildingUpgradeCostMultiplier",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getCaptureTileDurationPerTile",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCaptureTileInitialDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getChanceForTileWithBonusByRegionTier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCorruptionIndexByResource",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getCultistUnitTypeId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCultistsNoDestructionDelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCultistsPerRegionMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCultistsSummonDelay",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDemilitarizationCooldown",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGameResources",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGameUnits",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGlobalMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialCaptureProsperityBasicValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialCaptureProsperityPerTileValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialCorruptionIndexPerCultistMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialCultistsAmountByRegionTier",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getManeuverStunDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxAdvancedProductionTileBuff",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxAllowedRobberyMultiplierIncreaseValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxAllowedUnitsToBuyPerTransaction",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxAllowedWorkersToBuyPerTransaction",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxCapturedTilesForSettlement",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxCultistsPerRegion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxRegionTier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxSettlementsPerRegion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumBattleDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinimumUserSettlementsCountInNeighboringRegionRequiredToIncludeRegion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNecessaryProsperityPercentForClaimingTileCapture",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNewSettlementPriceIncreaseMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNewSettlementStartingPrice",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextCaptureProsperityBasicThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextCaptureProsperityPerTileThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProductionTicksInSecond",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProsperityForUnitLiquidation",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRegionInclusionPrice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRegionOwnerSettlementPurchasePercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getResourceWeight",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRobberyPointsPerDamageMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRobberyPointsToResourceMultiplier",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getSettlementPayToDecreaseCorruptionIndexPenaltyMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSettlementPriceMultiplierPerIncreasedRegionTier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStunDurationOfCancelledSecretManeuver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTileCaptureCancellationFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getToTreasuryPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitBattleMultiplierTileBonusByVariation",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitHiringFortHpMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitPoolType",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitPriceDropByUnitTypeId",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitPriceIncreaseByUnitTypeId",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitResourceUsagePer1SecondOfDecreasedManeuverDuration",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitStats",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnitTypeIds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWorkerCapacityCoefficient",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getWorkerPriceDrop",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWorkerPriceIncreaseForEachWorker",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWorkersAmountForBuildingActivation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWorkersForUnitLiquidation",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "init", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "mightyCreator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setMightyCreator",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setWorldAssetFactory",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "worldAssetFactory",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAdvancedProductionTileBonusByVariation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArmyStunDurationByJoiningBattleAtAttackingSide",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArmyStunDurationPerRobberyMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBaseBattleDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBasicProductionBuildingCoefficient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBattleDurationLosingArmyStunMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBattleDurationWinningArmyStunMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuildingActivationPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuildingCooldownDurationAfterActivation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuildingTokenTransferThresholdPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuildingTypeIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBuildingUpgradeCostMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCaptureTileDurationPerTile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCaptureTileInitialDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getChanceForTileWithBonusByRegionTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCorruptionIndexByResource",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCultistUnitTypeId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCultistsNoDestructionDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCultistsPerRegionMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCultistsSummonDelay",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDemilitarizationCooldown",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGameResources",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGameUnits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGlobalMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitialCaptureProsperityBasicValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitialCaptureProsperityPerTileValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitialCorruptionIndexPerCultistMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitialCultistsAmountByRegionTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getManeuverStunDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxAdvancedProductionTileBuff",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxAllowedRobberyMultiplierIncreaseValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxAllowedUnitsToBuyPerTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxAllowedWorkersToBuyPerTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxCapturedTilesForSettlement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxCultistsPerRegion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxRegionTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxSettlementsPerRegion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumBattleDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinimumUserSettlementsCountInNeighboringRegionRequiredToIncludeRegion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNecessaryProsperityPercentForClaimingTileCapture",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNewSettlementPriceIncreaseMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNewSettlementStartingPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNextCaptureProsperityBasicThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNextCaptureProsperityPerTileThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProductionTicksInSecond",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProsperityForUnitLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRegionInclusionPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRegionOwnerSettlementPurchasePercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResourceWeight",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRobberyPointsPerDamageMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRobberyPointsToResourceMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSettlementPayToDecreaseCorruptionIndexPenaltyMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSettlementPriceMultiplierPerIncreasedRegionTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStunDurationOfCancelledSecretManeuver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileCaptureCancellationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getToTreasuryPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitBattleMultiplierTileBonusByVariation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitHiringFortHpMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitPoolType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitPriceDropByUnitTypeId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitPriceIncreaseByUnitTypeId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitResourceUsagePer1SecondOfDecreasedManeuverDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitStats",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnitTypeIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWorkerCapacityCoefficient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWorkerPriceDrop",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWorkerPriceIncreaseForEachWorker",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWorkersAmountForBuildingActivation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWorkersForUnitLiquidation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mightyCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMightyCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setWorldAssetFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "worldAssetFactory",
    data: BytesLike
  ): Result;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Registry extends BaseContract {
  connect(runner?: ContractRunner | null): Registry;
  waitForDeployment(): Promise<this>;

  interface: RegistryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  getAdvancedProductionTileBonusByVariation: TypedContractMethod<
    [variation: BigNumberish],
    [[string, bigint]],
    "view"
  >;

  getArmyStunDurationByJoiningBattleAtAttackingSide: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getArmyStunDurationPerRobberyMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getBaseBattleDuration: TypedContractMethod<[], [bigint], "view">;

  getBasicProductionBuildingCoefficient: TypedContractMethod<
    [buildingTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getBattleDurationLosingArmyStunMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getBattleDurationWinningArmyStunMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getBuildingActivationPrice: TypedContractMethod<
    [],
    [[string[], bigint[]]],
    "view"
  >;

  getBuildingCooldownDurationAfterActivation: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getBuildingTokenTransferThresholdPercent: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getBuildingTypeIds: TypedContractMethod<[], [string[]], "view">;

  getBuildingUpgradeCostMultiplier: TypedContractMethod<
    [buildingTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getCaptureTileDurationPerTile: TypedContractMethod<[], [bigint], "view">;

  getCaptureTileInitialDuration: TypedContractMethod<[], [bigint], "view">;

  getChanceForTileWithBonusByRegionTier: TypedContractMethod<
    [regionTier: BigNumberish],
    [bigint],
    "view"
  >;

  getCorruptionIndexByResource: TypedContractMethod<
    [resourceTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getCultistUnitTypeId: TypedContractMethod<[], [string], "view">;

  getCultistsNoDestructionDelay: TypedContractMethod<[], [bigint], "view">;

  getCultistsPerRegionMultiplier: TypedContractMethod<[], [bigint], "view">;

  getCultistsSummonDelay: TypedContractMethod<[], [bigint], "view">;

  getDemilitarizationCooldown: TypedContractMethod<[], [bigint], "view">;

  getGameResources: TypedContractMethod<
    [],
    [Config.GameResourceStructOutput[]],
    "view"
  >;

  getGameUnits: TypedContractMethod<
    [],
    [Config.GameUnitStructOutput[]],
    "view"
  >;

  getGlobalMultiplier: TypedContractMethod<[], [bigint], "view">;

  getInitialCaptureProsperityBasicValue: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getInitialCaptureProsperityPerTileValue: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getInitialCorruptionIndexPerCultistMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getInitialCultistsAmountByRegionTier: TypedContractMethod<
    [regionTier: BigNumberish],
    [bigint],
    "view"
  >;

  getManeuverStunDuration: TypedContractMethod<[], [bigint], "view">;

  getMaxAdvancedProductionTileBuff: TypedContractMethod<[], [bigint], "view">;

  getMaxAllowedRobberyMultiplierIncreaseValue: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getMaxAllowedUnitsToBuyPerTransaction: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getMaxAllowedWorkersToBuyPerTransaction: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getMaxCapturedTilesForSettlement: TypedContractMethod<
    [tileBonusType: BigNumberish],
    [bigint],
    "view"
  >;

  getMaxCultistsPerRegion: TypedContractMethod<[], [bigint], "view">;

  getMaxRegionTier: TypedContractMethod<[], [bigint], "view">;

  getMaxSettlementsPerRegion: TypedContractMethod<[], [bigint], "view">;

  getMinimumBattleDuration: TypedContractMethod<[], [bigint], "view">;

  getMinimumUserSettlementsCountInNeighboringRegionRequiredToIncludeRegion: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getNecessaryProsperityPercentForClaimingTileCapture: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getNewSettlementPriceIncreaseMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getNewSettlementStartingPrice: TypedContractMethod<[], [bigint], "view">;

  getNextCaptureProsperityBasicThreshold: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getNextCaptureProsperityPerTileThreshold: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getProductionTicksInSecond: TypedContractMethod<[], [bigint], "view">;

  getProsperityForUnitLiquidation: TypedContractMethod<
    [unitTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getRegionInclusionPrice: TypedContractMethod<
    [regionTier: BigNumberish],
    [bigint],
    "view"
  >;

  getRegionOwnerSettlementPurchasePercent: TypedContractMethod<
    [regionTier: BigNumberish],
    [bigint],
    "view"
  >;

  getResourceWeight: TypedContractMethod<
    [resourceTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getRobberyPointsPerDamageMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getRobberyPointsToResourceMultiplier: TypedContractMethod<
    [resourceTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getSettlementPayToDecreaseCorruptionIndexPenaltyMultiplier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getSettlementPriceMultiplierPerIncreasedRegionTier: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getStunDurationOfCancelledSecretManeuver: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getTileCaptureCancellationFee: TypedContractMethod<[], [bigint], "view">;

  getToTreasuryPercent: TypedContractMethod<[], [bigint], "view">;

  getUnitBattleMultiplierTileBonusByVariation: TypedContractMethod<
    [variation: BigNumberish],
    [[string, bigint]],
    "view"
  >;

  getUnitHiringFortHpMultiplier: TypedContractMethod<[], [bigint], "view">;

  getUnitPoolType: TypedContractMethod<
    [unitTypeId: BytesLike],
    [string],
    "view"
  >;

  getUnitPriceDropByUnitTypeId: TypedContractMethod<
    [unitTypeId: BytesLike],
    [[bigint, bigint]],
    "view"
  >;

  getUnitPriceIncreaseByUnitTypeId: TypedContractMethod<
    [unitTypeId: BytesLike],
    [[bigint, bigint]],
    "view"
  >;

  getUnitResourceUsagePer1SecondOfDecreasedManeuverDuration: TypedContractMethod<
    [unitTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getUnitStats: TypedContractMethod<
    [unitTypeId: BytesLike],
    [Config.UnitStatsStructOutput],
    "view"
  >;

  getUnitTypeIds: TypedContractMethod<[], [string[]], "view">;

  getWorkerCapacityCoefficient: TypedContractMethod<
    [buildingTypeId: BytesLike],
    [bigint],
    "view"
  >;

  getWorkerPriceDrop: TypedContractMethod<[], [[bigint, bigint]], "view">;

  getWorkerPriceIncreaseForEachWorker: TypedContractMethod<
    [],
    [[bigint, bigint]],
    "view"
  >;

  getWorkersAmountForBuildingActivation: TypedContractMethod<
    [],
    [bigint],
    "view"
  >;

  getWorkersForUnitLiquidation: TypedContractMethod<
    [unitTypeId: BytesLike],
    [bigint],
    "view"
  >;

  init: TypedContractMethod<[], [void], "nonpayable">;

  mightyCreator: TypedContractMethod<[], [string], "view">;

  setMightyCreator: TypedContractMethod<
    [newMightyCreator: AddressLike],
    [void],
    "nonpayable"
  >;

  setWorldAssetFactory: TypedContractMethod<
    [worldAssetFactoryAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  worldAssetFactory: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "getAdvancedProductionTileBonusByVariation"
  ): TypedContractMethod<[variation: BigNumberish], [[string, bigint]], "view">;
  getFunction(
    nameOrSignature: "getArmyStunDurationByJoiningBattleAtAttackingSide"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getArmyStunDurationPerRobberyMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBaseBattleDuration"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBasicProductionBuildingCoefficient"
  ): TypedContractMethod<[buildingTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBattleDurationLosingArmyStunMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBattleDurationWinningArmyStunMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBuildingActivationPrice"
  ): TypedContractMethod<[], [[string[], bigint[]]], "view">;
  getFunction(
    nameOrSignature: "getBuildingCooldownDurationAfterActivation"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBuildingTokenTransferThresholdPercent"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getBuildingTypeIds"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getBuildingUpgradeCostMultiplier"
  ): TypedContractMethod<[buildingTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCaptureTileDurationPerTile"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCaptureTileInitialDuration"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getChanceForTileWithBonusByRegionTier"
  ): TypedContractMethod<[regionTier: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCorruptionIndexByResource"
  ): TypedContractMethod<[resourceTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCultistUnitTypeId"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getCultistsNoDestructionDelay"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCultistsPerRegionMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getCultistsSummonDelay"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getDemilitarizationCooldown"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getGameResources"
  ): TypedContractMethod<[], [Config.GameResourceStructOutput[]], "view">;
  getFunction(
    nameOrSignature: "getGameUnits"
  ): TypedContractMethod<[], [Config.GameUnitStructOutput[]], "view">;
  getFunction(
    nameOrSignature: "getGlobalMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInitialCaptureProsperityBasicValue"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInitialCaptureProsperityPerTileValue"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInitialCorruptionIndexPerCultistMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getInitialCultistsAmountByRegionTier"
  ): TypedContractMethod<[regionTier: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getManeuverStunDuration"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxAdvancedProductionTileBuff"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxAllowedRobberyMultiplierIncreaseValue"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxAllowedUnitsToBuyPerTransaction"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxAllowedWorkersToBuyPerTransaction"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxCapturedTilesForSettlement"
  ): TypedContractMethod<[tileBonusType: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxCultistsPerRegion"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxRegionTier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMaxSettlementsPerRegion"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMinimumBattleDuration"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getMinimumUserSettlementsCountInNeighboringRegionRequiredToIncludeRegion"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNecessaryProsperityPercentForClaimingTileCapture"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNewSettlementPriceIncreaseMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNewSettlementStartingPrice"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNextCaptureProsperityBasicThreshold"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNextCaptureProsperityPerTileThreshold"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getProductionTicksInSecond"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getProsperityForUnitLiquidation"
  ): TypedContractMethod<[unitTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRegionInclusionPrice"
  ): TypedContractMethod<[regionTier: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRegionOwnerSettlementPurchasePercent"
  ): TypedContractMethod<[regionTier: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getResourceWeight"
  ): TypedContractMethod<[resourceTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRobberyPointsPerDamageMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getRobberyPointsToResourceMultiplier"
  ): TypedContractMethod<[resourceTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getSettlementPayToDecreaseCorruptionIndexPenaltyMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getSettlementPriceMultiplierPerIncreasedRegionTier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getStunDurationOfCancelledSecretManeuver"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTileCaptureCancellationFee"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getToTreasuryPercent"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getUnitBattleMultiplierTileBonusByVariation"
  ): TypedContractMethod<[variation: BigNumberish], [[string, bigint]], "view">;
  getFunction(
    nameOrSignature: "getUnitHiringFortHpMultiplier"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getUnitPoolType"
  ): TypedContractMethod<[unitTypeId: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getUnitPriceDropByUnitTypeId"
  ): TypedContractMethod<[unitTypeId: BytesLike], [[bigint, bigint]], "view">;
  getFunction(
    nameOrSignature: "getUnitPriceIncreaseByUnitTypeId"
  ): TypedContractMethod<[unitTypeId: BytesLike], [[bigint, bigint]], "view">;
  getFunction(
    nameOrSignature: "getUnitResourceUsagePer1SecondOfDecreasedManeuverDuration"
  ): TypedContractMethod<[unitTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getUnitStats"
  ): TypedContractMethod<
    [unitTypeId: BytesLike],
    [Config.UnitStatsStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getUnitTypeIds"
  ): TypedContractMethod<[], [string[]], "view">;
  getFunction(
    nameOrSignature: "getWorkerCapacityCoefficient"
  ): TypedContractMethod<[buildingTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getWorkerPriceDrop"
  ): TypedContractMethod<[], [[bigint, bigint]], "view">;
  getFunction(
    nameOrSignature: "getWorkerPriceIncreaseForEachWorker"
  ): TypedContractMethod<[], [[bigint, bigint]], "view">;
  getFunction(
    nameOrSignature: "getWorkersAmountForBuildingActivation"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getWorkersForUnitLiquidation"
  ): TypedContractMethod<[unitTypeId: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "init"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "mightyCreator"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "setMightyCreator"
  ): TypedContractMethod<[newMightyCreator: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setWorldAssetFactory"
  ): TypedContractMethod<
    [worldAssetFactoryAddress: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "worldAssetFactory"
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;

  filters: {
    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
  };
}
