/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BannerParts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BannerParts__factory>;
    getContractFactory(
      name: "Banners",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Banners__factory>;
    getContractFactory(
      name: "Army",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Army__factory>;
    getContractFactory(
      name: "IArmy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IArmy__factory>;
    getContractFactory(
      name: "Battle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Battle__factory>;
    getContractFactory(
      name: "IBattle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBattle__factory>;
    getContractFactory(
      name: "Building",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Building__factory>;
    getContractFactory(
      name: "IBuilding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBuilding__factory>;
    getContractFactory(
      name: "Farm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Farm__factory>;
    getContractFactory(
      name: "Fort",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fort__factory>;
    getContractFactory(
      name: "IFort",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFort__factory>;
    getContractFactory(
      name: "Lumbermill",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lumbermill__factory>;
    getContractFactory(
      name: "Mine",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mine__factory>;
    getContractFactory(
      name: "Smithy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Smithy__factory>;
    getContractFactory(
      name: "Era",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Era__factory>;
    getContractFactory(
      name: "IEra",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEra__factory>;
    getContractFactory(
      name: "IWorldAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorldAsset__factory>;
    getContractFactory(
      name: "IWorldAssetFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorldAssetFactory__factory>;
    getContractFactory(
      name: "IWorldAssetStorageAccessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorldAssetStorageAccessor__factory>;
    getContractFactory(
      name: "IRegion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegion__factory>;
    getContractFactory(
      name: "Region",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Region__factory>;
    getContractFactory(
      name: "CultistsSettlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CultistsSettlement__factory>;
    getContractFactory(
      name: "ISettlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISettlement__factory>;
    getContractFactory(
      name: "Settlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Settlement__factory>;
    getContractFactory(
      name: "ISettlementsMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISettlementsMarket__factory>;
    getContractFactory(
      name: "SettlementsMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SettlementsMarket__factory>;
    getContractFactory(
      name: "ISiege",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISiege__factory>;
    getContractFactory(
      name: "Siege",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Siege__factory>;
    getContractFactory(
      name: "ITileCapturingSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITileCapturingSystem__factory>;
    getContractFactory(
      name: "TileCapturingSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TileCapturingSystem__factory>;
    getContractFactory(
      name: "IProsperity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProsperity__factory>;
    getContractFactory(
      name: "Prosperity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Prosperity__factory>;
    getContractFactory(
      name: "IResource",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IResource__factory>;
    getContractFactory(
      name: "Resource",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Resource__factory>;
    getContractFactory(
      name: "IUnits",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnits__factory>;
    getContractFactory(
      name: "Units",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Units__factory>;
    getContractFactory(
      name: "IWorkers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorkers__factory>;
    getContractFactory(
      name: "Workers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Workers__factory>;
    getContractFactory(
      name: "IngotsUnitsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IngotsUnitsPool__factory>;
    getContractFactory(
      name: "IUnitsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUnitsPool__factory>;
    getContractFactory(
      name: "WorkersUnitsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkersUnitsPool__factory>;
    getContractFactory(
      name: "IWorkersPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorkersPool__factory>;
    getContractFactory(
      name: "WorkersPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorkersPool__factory>;
    getContractFactory(
      name: "WorldAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAsset__factory>;
    getContractFactory(
      name: "WorldAssetFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAssetFactory__factory>;
    getContractFactory(
      name: "WorldAssetProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAssetProxy__factory>;
    getContractFactory(
      name: "WorldAssetStorageAccessorWithoutPush0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithoutPush0__factory>;
    getContractFactory(
      name: "WorldAssetStorageAccessorWithPush0",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithPush0__factory>;
    getContractFactory(
      name: "WorldAssetStorageAccessorWithStaticContractCode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithStaticContractCode__factory>;
    getContractFactory(
      name: "CrossErasMemory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrossErasMemory__factory>;
    getContractFactory(
      name: "ICrossErasMemory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrossErasMemory__factory>;
    getContractFactory(
      name: "Distributions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Distributions__factory>;
    getContractFactory(
      name: "IDistributions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDistributions__factory>;
    getContractFactory(
      name: "Geography",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Geography__factory>;
    getContractFactory(
      name: "IGeography",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeography__factory>;
    getContractFactory(
      name: "IRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegistry__factory>;
    getContractFactory(
      name: "IWorld",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorld__factory>;
    getContractFactory(
      name: "IWorldInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWorldInitializable__factory>;
    getContractFactory(
      name: "IRegionOwnershipToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegionOwnershipToken__factory>;
    getContractFactory(
      name: "RegionOwnershipToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RegionOwnershipToken__factory>;
    getContractFactory(
      name: "Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Registry__factory>;
    getContractFactory(
      name: "IRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardPool__factory>;
    getContractFactory(
      name: "RewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardPool__factory>;
    getContractFactory(
      name: "World",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.World__factory>;
    getContractFactory(
      name: "WorldInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WorldInitializable__factory>;
    getContractFactory(
      name: "SettlementsListings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SettlementsListings__factory>;
    getContractFactory(
      name: "Config",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Config__factory>;
    getContractFactory(
      name: "ArmyView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArmyView__factory>;
    getContractFactory(
      name: "BattleView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BattleView__factory>;
    getContractFactory(
      name: "EraView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EraView__factory>;
    getContractFactory(
      name: "Multicall3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall3__factory>;
    getContractFactory(
      name: "ProxyReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyReentrancyGuard__factory>;
    getContractFactory(
      name: "Resolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Resolver__factory>;
    getContractFactory(
      name: "SettlementView",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SettlementView__factory>;
    getContractFactory(
      name: "SimpleProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleProxy__factory>;
    getContractFactory(
      name: "StubERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StubERC20__factory>;
    getContractFactory(
      name: "ERC20Int",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Int__factory>;
    getContractFactory(
      name: "ERC20IntBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20IntBurnable__factory>;
    getContractFactory(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Int",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Int__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BannerParts",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BannerParts>;
    getContractAt(
      name: "Banners",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Banners>;
    getContractAt(
      name: "Army",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Army>;
    getContractAt(
      name: "IArmy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IArmy>;
    getContractAt(
      name: "Battle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Battle>;
    getContractAt(
      name: "IBattle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBattle>;
    getContractAt(
      name: "Building",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Building>;
    getContractAt(
      name: "IBuilding",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IBuilding>;
    getContractAt(
      name: "Farm",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Farm>;
    getContractAt(
      name: "Fort",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Fort>;
    getContractAt(
      name: "IFort",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IFort>;
    getContractAt(
      name: "Lumbermill",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Lumbermill>;
    getContractAt(
      name: "Mine",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Mine>;
    getContractAt(
      name: "Smithy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Smithy>;
    getContractAt(
      name: "Era",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Era>;
    getContractAt(
      name: "IEra",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEra>;
    getContractAt(
      name: "IWorldAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorldAsset>;
    getContractAt(
      name: "IWorldAssetFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorldAssetFactory>;
    getContractAt(
      name: "IWorldAssetStorageAccessor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorldAssetStorageAccessor>;
    getContractAt(
      name: "IRegion",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegion>;
    getContractAt(
      name: "Region",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Region>;
    getContractAt(
      name: "CultistsSettlement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CultistsSettlement>;
    getContractAt(
      name: "ISettlement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISettlement>;
    getContractAt(
      name: "Settlement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Settlement>;
    getContractAt(
      name: "ISettlementsMarket",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISettlementsMarket>;
    getContractAt(
      name: "SettlementsMarket",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SettlementsMarket>;
    getContractAt(
      name: "ISiege",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISiege>;
    getContractAt(
      name: "Siege",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Siege>;
    getContractAt(
      name: "ITileCapturingSystem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITileCapturingSystem>;
    getContractAt(
      name: "TileCapturingSystem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TileCapturingSystem>;
    getContractAt(
      name: "IProsperity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IProsperity>;
    getContractAt(
      name: "Prosperity",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Prosperity>;
    getContractAt(
      name: "IResource",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IResource>;
    getContractAt(
      name: "Resource",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Resource>;
    getContractAt(
      name: "IUnits",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnits>;
    getContractAt(
      name: "Units",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Units>;
    getContractAt(
      name: "IWorkers",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorkers>;
    getContractAt(
      name: "Workers",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Workers>;
    getContractAt(
      name: "IngotsUnitsPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IngotsUnitsPool>;
    getContractAt(
      name: "IUnitsPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUnitsPool>;
    getContractAt(
      name: "WorkersUnitsPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkersUnitsPool>;
    getContractAt(
      name: "IWorkersPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorkersPool>;
    getContractAt(
      name: "WorkersPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorkersPool>;
    getContractAt(
      name: "WorldAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAsset>;
    getContractAt(
      name: "WorldAssetFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAssetFactory>;
    getContractAt(
      name: "WorldAssetProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAssetProxy>;
    getContractAt(
      name: "WorldAssetStorageAccessorWithoutPush0",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAssetStorageAccessorWithoutPush0>;
    getContractAt(
      name: "WorldAssetStorageAccessorWithPush0",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAssetStorageAccessorWithPush0>;
    getContractAt(
      name: "WorldAssetStorageAccessorWithStaticContractCode",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldAssetStorageAccessorWithStaticContractCode>;
    getContractAt(
      name: "CrossErasMemory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CrossErasMemory>;
    getContractAt(
      name: "ICrossErasMemory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrossErasMemory>;
    getContractAt(
      name: "Distributions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Distributions>;
    getContractAt(
      name: "IDistributions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDistributions>;
    getContractAt(
      name: "Geography",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Geography>;
    getContractAt(
      name: "IGeography",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeography>;
    getContractAt(
      name: "IRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegistry>;
    getContractAt(
      name: "IWorld",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorld>;
    getContractAt(
      name: "IWorldInitializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWorldInitializable>;
    getContractAt(
      name: "IRegionOwnershipToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegionOwnershipToken>;
    getContractAt(
      name: "RegionOwnershipToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RegionOwnershipToken>;
    getContractAt(
      name: "Registry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Registry>;
    getContractAt(
      name: "IRewardPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardPool>;
    getContractAt(
      name: "RewardPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardPool>;
    getContractAt(
      name: "World",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.World>;
    getContractAt(
      name: "WorldInitializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WorldInitializable>;
    getContractAt(
      name: "SettlementsListings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SettlementsListings>;
    getContractAt(
      name: "Config",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Config>;
    getContractAt(
      name: "ArmyView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArmyView>;
    getContractAt(
      name: "BattleView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BattleView>;
    getContractAt(
      name: "EraView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EraView>;
    getContractAt(
      name: "Multicall3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall3>;
    getContractAt(
      name: "ProxyReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyReentrancyGuard>;
    getContractAt(
      name: "Resolver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Resolver>;
    getContractAt(
      name: "SettlementView",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SettlementView>;
    getContractAt(
      name: "SimpleProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleProxy>;
    getContractAt(
      name: "StubERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StubERC20>;
    getContractAt(
      name: "ERC20Int",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Int>;
    getContractAt(
      name: "ERC20IntBurnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20IntBurnable>;
    getContractAt(
      name: "IERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Burnable>;
    getContractAt(
      name: "IERC20Int",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Int>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "BannerParts",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BannerParts>;
    deployContract(
      name: "Banners",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Banners>;
    deployContract(
      name: "Army",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Army>;
    deployContract(
      name: "IArmy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IArmy>;
    deployContract(
      name: "Battle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Battle>;
    deployContract(
      name: "IBattle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBattle>;
    deployContract(
      name: "Building",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Building>;
    deployContract(
      name: "IBuilding",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBuilding>;
    deployContract(
      name: "Farm",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Farm>;
    deployContract(
      name: "Fort",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fort>;
    deployContract(
      name: "IFort",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFort>;
    deployContract(
      name: "Lumbermill",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lumbermill>;
    deployContract(
      name: "Mine",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Mine>;
    deployContract(
      name: "Smithy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Smithy>;
    deployContract(
      name: "Era",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Era>;
    deployContract(
      name: "IEra",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEra>;
    deployContract(
      name: "IWorldAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAsset>;
    deployContract(
      name: "IWorldAssetFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAssetFactory>;
    deployContract(
      name: "IWorldAssetStorageAccessor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAssetStorageAccessor>;
    deployContract(
      name: "IRegion",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegion>;
    deployContract(
      name: "Region",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Region>;
    deployContract(
      name: "CultistsSettlement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CultistsSettlement>;
    deployContract(
      name: "ISettlement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISettlement>;
    deployContract(
      name: "Settlement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Settlement>;
    deployContract(
      name: "ISettlementsMarket",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISettlementsMarket>;
    deployContract(
      name: "SettlementsMarket",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementsMarket>;
    deployContract(
      name: "ISiege",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISiege>;
    deployContract(
      name: "Siege",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Siege>;
    deployContract(
      name: "ITileCapturingSystem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITileCapturingSystem>;
    deployContract(
      name: "TileCapturingSystem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TileCapturingSystem>;
    deployContract(
      name: "IProsperity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IProsperity>;
    deployContract(
      name: "Prosperity",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Prosperity>;
    deployContract(
      name: "IResource",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IResource>;
    deployContract(
      name: "Resource",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Resource>;
    deployContract(
      name: "IUnits",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnits>;
    deployContract(
      name: "Units",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Units>;
    deployContract(
      name: "IWorkers",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorkers>;
    deployContract(
      name: "Workers",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Workers>;
    deployContract(
      name: "IngotsUnitsPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IngotsUnitsPool>;
    deployContract(
      name: "IUnitsPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnitsPool>;
    deployContract(
      name: "WorkersUnitsPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorkersUnitsPool>;
    deployContract(
      name: "IWorkersPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorkersPool>;
    deployContract(
      name: "WorkersPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorkersPool>;
    deployContract(
      name: "WorldAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAsset>;
    deployContract(
      name: "WorldAssetFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetFactory>;
    deployContract(
      name: "WorldAssetProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetProxy>;
    deployContract(
      name: "WorldAssetStorageAccessorWithoutPush0",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithoutPush0>;
    deployContract(
      name: "WorldAssetStorageAccessorWithPush0",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithPush0>;
    deployContract(
      name: "WorldAssetStorageAccessorWithStaticContractCode",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithStaticContractCode>;
    deployContract(
      name: "CrossErasMemory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CrossErasMemory>;
    deployContract(
      name: "ICrossErasMemory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICrossErasMemory>;
    deployContract(
      name: "Distributions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Distributions>;
    deployContract(
      name: "IDistributions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDistributions>;
    deployContract(
      name: "Geography",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Geography>;
    deployContract(
      name: "IGeography",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGeography>;
    deployContract(
      name: "IRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegistry>;
    deployContract(
      name: "IWorld",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorld>;
    deployContract(
      name: "IWorldInitializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldInitializable>;
    deployContract(
      name: "IRegionOwnershipToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegionOwnershipToken>;
    deployContract(
      name: "RegionOwnershipToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegionOwnershipToken>;
    deployContract(
      name: "Registry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Registry>;
    deployContract(
      name: "IRewardPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRewardPool>;
    deployContract(
      name: "RewardPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardPool>;
    deployContract(
      name: "World",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.World>;
    deployContract(
      name: "WorldInitializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldInitializable>;
    deployContract(
      name: "SettlementsListings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementsListings>;
    deployContract(
      name: "Config",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Config>;
    deployContract(
      name: "ArmyView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArmyView>;
    deployContract(
      name: "BattleView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BattleView>;
    deployContract(
      name: "EraView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EraView>;
    deployContract(
      name: "Multicall3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall3>;
    deployContract(
      name: "ProxyReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProxyReentrancyGuard>;
    deployContract(
      name: "Resolver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Resolver>;
    deployContract(
      name: "SettlementView",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementView>;
    deployContract(
      name: "SimpleProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleProxy>;
    deployContract(
      name: "StubERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StubERC20>;
    deployContract(
      name: "ERC20Int",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Int>;
    deployContract(
      name: "ERC20IntBurnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20IntBurnable>;
    deployContract(
      name: "IERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Burnable>;
    deployContract(
      name: "IERC20Int",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Int>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Enumerable>;
    deployContract(
      name: "IERC721Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Enumerable>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "BannerParts",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BannerParts>;
    deployContract(
      name: "Banners",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Banners>;
    deployContract(
      name: "Army",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Army>;
    deployContract(
      name: "IArmy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IArmy>;
    deployContract(
      name: "Battle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Battle>;
    deployContract(
      name: "IBattle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBattle>;
    deployContract(
      name: "Building",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Building>;
    deployContract(
      name: "IBuilding",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IBuilding>;
    deployContract(
      name: "Farm",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Farm>;
    deployContract(
      name: "Fort",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Fort>;
    deployContract(
      name: "IFort",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IFort>;
    deployContract(
      name: "Lumbermill",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lumbermill>;
    deployContract(
      name: "Mine",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Mine>;
    deployContract(
      name: "Smithy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Smithy>;
    deployContract(
      name: "Era",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Era>;
    deployContract(
      name: "IEra",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEra>;
    deployContract(
      name: "IWorldAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAsset>;
    deployContract(
      name: "IWorldAssetFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAssetFactory>;
    deployContract(
      name: "IWorldAssetStorageAccessor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldAssetStorageAccessor>;
    deployContract(
      name: "IRegion",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegion>;
    deployContract(
      name: "Region",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Region>;
    deployContract(
      name: "CultistsSettlement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CultistsSettlement>;
    deployContract(
      name: "ISettlement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISettlement>;
    deployContract(
      name: "Settlement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Settlement>;
    deployContract(
      name: "ISettlementsMarket",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISettlementsMarket>;
    deployContract(
      name: "SettlementsMarket",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementsMarket>;
    deployContract(
      name: "ISiege",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISiege>;
    deployContract(
      name: "Siege",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Siege>;
    deployContract(
      name: "ITileCapturingSystem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITileCapturingSystem>;
    deployContract(
      name: "TileCapturingSystem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TileCapturingSystem>;
    deployContract(
      name: "IProsperity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IProsperity>;
    deployContract(
      name: "Prosperity",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Prosperity>;
    deployContract(
      name: "IResource",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IResource>;
    deployContract(
      name: "Resource",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Resource>;
    deployContract(
      name: "IUnits",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnits>;
    deployContract(
      name: "Units",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Units>;
    deployContract(
      name: "IWorkers",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorkers>;
    deployContract(
      name: "Workers",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Workers>;
    deployContract(
      name: "IngotsUnitsPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IngotsUnitsPool>;
    deployContract(
      name: "IUnitsPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUnitsPool>;
    deployContract(
      name: "WorkersUnitsPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorkersUnitsPool>;
    deployContract(
      name: "IWorkersPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorkersPool>;
    deployContract(
      name: "WorkersPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorkersPool>;
    deployContract(
      name: "WorldAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAsset>;
    deployContract(
      name: "WorldAssetFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetFactory>;
    deployContract(
      name: "WorldAssetProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetProxy>;
    deployContract(
      name: "WorldAssetStorageAccessorWithoutPush0",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithoutPush0>;
    deployContract(
      name: "WorldAssetStorageAccessorWithPush0",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithPush0>;
    deployContract(
      name: "WorldAssetStorageAccessorWithStaticContractCode",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldAssetStorageAccessorWithStaticContractCode>;
    deployContract(
      name: "CrossErasMemory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CrossErasMemory>;
    deployContract(
      name: "ICrossErasMemory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICrossErasMemory>;
    deployContract(
      name: "Distributions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Distributions>;
    deployContract(
      name: "IDistributions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDistributions>;
    deployContract(
      name: "Geography",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Geography>;
    deployContract(
      name: "IGeography",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGeography>;
    deployContract(
      name: "IRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegistry>;
    deployContract(
      name: "IWorld",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorld>;
    deployContract(
      name: "IWorldInitializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWorldInitializable>;
    deployContract(
      name: "IRegionOwnershipToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegionOwnershipToken>;
    deployContract(
      name: "RegionOwnershipToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RegionOwnershipToken>;
    deployContract(
      name: "Registry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Registry>;
    deployContract(
      name: "IRewardPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRewardPool>;
    deployContract(
      name: "RewardPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RewardPool>;
    deployContract(
      name: "World",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.World>;
    deployContract(
      name: "WorldInitializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WorldInitializable>;
    deployContract(
      name: "SettlementsListings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementsListings>;
    deployContract(
      name: "Config",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Config>;
    deployContract(
      name: "ArmyView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArmyView>;
    deployContract(
      name: "BattleView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BattleView>;
    deployContract(
      name: "EraView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EraView>;
    deployContract(
      name: "Multicall3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall3>;
    deployContract(
      name: "ProxyReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProxyReentrancyGuard>;
    deployContract(
      name: "Resolver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Resolver>;
    deployContract(
      name: "SettlementView",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SettlementView>;
    deployContract(
      name: "SimpleProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleProxy>;
    deployContract(
      name: "StubERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StubERC20>;
    deployContract(
      name: "ERC20Int",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Int>;
    deployContract(
      name: "ERC20IntBurnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20IntBurnable>;
    deployContract(
      name: "IERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Burnable>;
    deployContract(
      name: "IERC20Int",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Int>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
