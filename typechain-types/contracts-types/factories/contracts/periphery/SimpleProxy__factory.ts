/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleProxy,
  SimpleProxyInterface,
} from "../../../contracts/periphery/SimpleProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToTransferOwnershipToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50601733601b565b60b0565b7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1b80546001600160a01b031981166001600160a01b038481169182179093556040517f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b61026a806100bf6000396000f3fe6080604052600436106100345760003560e01c8063715018a614610074578063d784d42614610089578063f2fde38b146100a9575b600061003e6100c9565b80546040519192506001600160a01b03169036600082376000803683855af43d806000843e81801561006e578184f35b8184fd5b005b34801561008057600080fd5b506100726100ed565b34801561009557600080fd5b506100726100a4366004610204565b610101565b3480156100b557600080fd5b506100726100c4366004610204565b610135565b7f89ebf6b655b5bf3480fb4246b9e8786d810726f923695e3ff9668f941b26cb1a90565b6100f5610170565b6100ff60006101a4565b565b610109610170565b60006101136100c9565b80546001600160a01b0319166001600160a01b03939093169290921790915550565b61013d610170565b6001600160a01b038116610164576040516372e0a41960e11b815260040160405180910390fd5b61016d816101a4565b50565b336101796100c9565b600101546001600160a01b0316146100ff57604051635fc483c560e01b815260040160405180910390fd5b60006101ae6100c9565b6001810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60006020828403121561021657600080fd5b81356001600160a01b038116811461022d57600080fd5b939250505056fea2646970667358221220712cf4c5acf219d70b1736d3e21cd4cba35fa50d49031114dd5f18db238b1fa964736f6c634300081a0033";

type SimpleProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleProxy__factory extends ContractFactory {
  constructor(...args: SimpleProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleProxy__factory {
    return super.connect(runner) as SimpleProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleProxyInterface {
    return new Interface(_abi) as SimpleProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleProxy {
    return new Contract(address, _abi, runner) as unknown as SimpleProxy;
  }
}
